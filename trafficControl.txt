#include"ns3/core-module.h"
#include"ns3/network-module.h"
#include"ns3/point-to-point-module.h"
#include"ns3/applications-module.h"
#include"ns3/netanim-module.h"
#include"ns3/internet-module.h"
#include"ns3/flow-monitor.h"
#include"ns3/flow-monitor-helper.h"
#include"ns3/traffic-control-module.h"

using namespace ns3;
int main(int argc,char *argv[]){
	bool tracing = false;	
	
	NodeContainer nodes;
	nodes.Create(2);

	PointToPointHelper pointToPoint;
	pointToPoint.SetDeviceAttribute("DataRate", StringValue("5Mbps"));
	pointToPoint.SetChannelAttribute("Delay", StringValue("2ms"));
	
	NetDeviceContainer devices;
	devices = pointToPoint.Install(nodes);
	
	InternetStackHelper stack;
	stack.Install(nodes);
	
	Ipv4AddressHelper address;
	address.SetBase("10.1.1.0", "255.255.255.0");
	
	Ipv4InterfaceContainer interfaces = address.Assign(devices);
	
	UdpEchoServerHelper echoServer(9);
	
	ApplicationContainer serverApps = echoServer.Install(nodes.Get(1));
	serverApps.Start(Seconds(1.0));
	serverApps.Stop(Seconds(10.0));
	
	UdpEchoClientHelper echoClient(interfaces.GetAddress(1),9);
	echoClient.SetAttribute("MaxPackets", UintegerValue(1));
	echoClient.SetAttribute("Interval", TimeValue(Seconds(1.0)));
	echoClient.SetAttribute("PacketSize", UintegerValue(1024));
	
	ApplicationContainer clientApp = echoClient.Install(nodes.Get(0));
	clientApp.Start(Seconds(2.0));
	clientApp.Stop(Seconds(10.0));

	Ptr<FlowMonitor> flowMonitor;
	FlowMonitorHelper flowHelper;
	flowMonitor = flowHelper.InstallAll();

	Simulator::Stop(Seconds(10.0));

	if(tracing == true){
		pointToPoint.EnablePcapAll("p2p");
		
}
	Simulator::Run();

	flowMonitor->SerializeToXmlFile("traffic.xml",true,true);

	Simulator::Destroy();
	return 0;

}